# Generated by Django 5.1 on 2025-06-28 04:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("profile_completed", models.BooleanField(default=False)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "preferred_language",
                    models.CharField(
                        blank=True, default="en", max_length=10, null=True
                    ),
                ),
                (
                    "father_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "mother_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "place_of_birth",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("blood_group", models.CharField(blank=True, max_length=10, null=True)),
                ("needs_assistant_teacher", models.BooleanField(default=False)),
                (
                    "admission_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "parent_email_for_linking",
                    models.EmailField(
                        blank=True,
                        help_text="Email to verify and link account.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "parent_mobile_for_linking",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "parent_occupation",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("hobbies", models.TextField(blank=True, null=True)),
                (
                    "favorite_sports",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("interested_in_gardening_farming", models.BooleanField(default=False)),
                ("nickname", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/students/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeacherProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("profile_completed", models.BooleanField(default=False)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                ("interested_in_tuition", models.BooleanField(default=False)),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/teachers/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Student", "Student"),
                            ("Teacher", "Teacher"),
                            ("Parent", "Parent"),
                            ("Admin", "Admin"),
                        ],
                        default="Student",
                        max_length=10,
                    ),
                ),
                (
                    "is_school_admin",
                    models.BooleanField(
                        default=False,
                        help_text="Designates if this admin user manages a specific school.",
                    ),
                ),
                (
                    "face_encoding",
                    models.TextField(
                        blank=True,
                        help_text="JSON serialized face encoding for recognition.",
                        null=True,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="customuser_set",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="customuser_set",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ParentProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("profile_completed", models.BooleanField(default=False)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/parents/"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        limit_choices_to={"role": "Parent"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parent_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParentStudentLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        limit_choices_to={"role": "Parent"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parent_links",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"role": "Student"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_links",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="School",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "school_id_code",
                    models.CharField(
                        help_text="Unique external ID for the school",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "license_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("official_email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "principal_full_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "principal_contact_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "principal_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "admin_user",
                    models.OneToOneField(
                        blank=True,
                        help_text="The primary admin user for this school, created during registration.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="administered_school",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="customuser",
            name="school",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="staff_and_students",
                to="accounts.school",
            ),
        ),
    ]
